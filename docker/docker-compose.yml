version: '3.7'
services:
  app:
    image: ternandsparrow/s2s-portal:${TAG:-deploy}
    build: ..
    container_name: s2s_app
    restart: unless-stopped
    init: true
    environment:
      DBHOST: db
      DBNAME: ${DB_NAME}
      DBUSER: ${DB_USER}
      DBPASS: ${DB_PASS}
      GRAILS_ENV: production
      DISABLE_AUTO_RECOMPILE: 'true'
      TOMCAT_MAX_MEM_MB: 4096
      TOMCAT_MAX_PERM_MB: 512
      VIRTUAL_HOST: ${DOMAIN_NAME}
      # DOI root URL cannot be configured via web UI, it must be done here.
      DOI_S2S_ROOT_URL: ${DOI_S2S_ROOT_URL}
      # AEKOS services URL value will populate the DB on first run, then you
      #   must change it via the web UI.
      DEFAULT_AEKOS_SERVICES_URL: ${DEFAULT_AEKOS_SERVICES_URL}
    volumes:
      - s2s-extracts:/data/soils2sat/extracts
    healthcheck:
      test: curl -sI localhost:8080/ala-soils2sat | grep -q '302 Found' || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 2
      # yeah, it takes ages to start :'(
      start_period: 5m
    logging:
      driver: "json-file"
      options:
        max-size: 100m

  nginxhelper:
    # creates some dynamic location config for nginx
    image: jwilder/nginx-proxy:alpine-0.7.0
    entrypoint: '/entrypoint.sh'
    container_name: s2s_nginx_helper
    environment:
      VIRTUAL_HOST_NAMES: ${DOMAIN_NAME}
      PROXY_HOST: app
      PROXY_PORT: 8080
      PROXY_CONTEXT: ala-soils2sat
    volumes:
      - ./nginx-helper/entrypoint.sh:/entrypoint.sh:ro
      - s2s-nginx-vhostd:/etc/nginx/vhost.d
    logging:
      driver: "json-file"
      options:
        max-size: 100m

  db:
    image: postgres:9.4
    container_name: s2s_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - s2s-pgdata:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: 100m

  extractsbackups3:
    image: vladgh/s3sync:0.4
    command: sync
    container_name: s2s-extractsbackups3
    restart: unless-stopped
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${S3_REGION}
      S3PATH: s3://${AWS_S3_BUCKET}/extracts
    volumes:
      - s2s-extracts:/sync:ro
    logging:
      driver: "json-file"
      options:
        max-size: 100m

  pgbackups3:
    image: schickling/postgres-backup-s3
    container_name: s2s-pgbackups3
    restart: unless-stopped
    environment:
      SCHEDULE: ${DB_BACKUP_CRON_SCHEDULE}
      S3_REGION: ap-southeast-2
      S3_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_BUCKET: ${AWS_S3_BUCKET}
      S3_PREFIX: ${DB_BACKUP_PREFIX}s2s-backup
      POSTGRES_HOST: db
      POSTGRES_DATABASE: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_EXTRA_OPTS: '--schema=public --blobs'
    logging:
      driver: "json-file"
      options:
        max-size: 100m

  nginx-proxy:
    image: jwilder/nginx-proxy:alpine-0.7.0
    ports:
      - "${SSL_EXTERNAL_LISTEN_PORT:-443}:443"
      - "${NONSSL_EXTERNAL_LISTEN_PORT:-80}:80"
    restart: unless-stopped
    container_name: s2s_nginx
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - s2s-nginx-vhostd:/etc/nginx/vhost.d
    logging:
      driver: "json-file"
      options:
        max-size: 100m

  autoheal: # thanks https://stackoverflow.com/a/48538213/1410035
    # will restart container with a failing healthcheck
    image: willfarrell/autoheal
    container_name: s2s_autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: "json-file"
      options:
        max-size: 100m

volumes:
  s2s-pgdata:
  s2s-extracts:
  s2s-nginx-vhostd:
